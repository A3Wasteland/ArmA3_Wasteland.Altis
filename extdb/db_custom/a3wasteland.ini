[Default]
Version = 4

Number of Inputs = 0

Sanitize Check = false

String Datatype Check = false
; Add Quotations around Text / VarChar DataTypes when retrieving Values
;	Note: This Doesn't Work for  Text DataTypes for MySQL

Strip Chars = `/\|;,{}-<>'
Strip Chars List = false
; Can't Strip Char : since its used as a divider in extDB.
; If you need it stripped you will need todo it in SQF Code.
; Note if value contains divider :
; it will result in extDB reading to many input values + will return an error anyways.


;	Important if you are using $INPUT_STRING_x, recommended you strip the char `
;		That is the quotation char used to wrap strings


;; Server Info
;;
[getServerInfo]
SQL_1 = SELECT * FROM ServerInfo
SQL_2 = 	WHERE ID = $INPUT 1;

Number of Inputs = 1

[updateWarchestMoney]
SQL_1 = UPDATE INTO ServerInfo
SQL_2 = 	(WarchestMoneyBLUFOR, WarchestMoneyOPFOR)
SQL_3 = 		VALUES ($INPUT_2, $INPUT_3)
SQL_4 = 	WHERE ID = $INPUT_1;

Number of Inputs = 3 


;; Server Objects
;;
[countAllServerObjects]
SQL_1 = SELECT COUNT(*) FROM ServerObjects;

[getAllServerObjects]
SQL_1 = SELECT * FROM ServerObjects;

[replaceServerObject]
SQL_1 = REPLACE INTO ServerObjects 
SQL_2 = 	SET Class=$INPUT_STRING_1, Position=$INPUT_2, Direction=$INPUT_3, HoursAlive=$INPUT_4, 
SQL_3 = 		CreationDate=$INPUT_5, Damage=$INPUT_6, AllowDamage=$INPUT_7, Variables=$INPUT_8, 
SQL_4 = 		AmmoCargo=$INPUT_9, FuelCargo=$INPUT_10, RepairCargo=$INPUT_11);

Number of Inputs = 11

[updateServerObjectInventory]
SQL_1 = UPDATE INTO ServerObjects 
SQL_2 = 	(Weapons, Magazines, Items, Backpacks, TurretMagazines)
SQL_3 = 		VALUES ($INPUT_2, $INPUT_3, $INPUT_4, $INPUT_5, $INPUT_6)
SQL_4 =		WHERE ID = $INPUT_1;

Number of Inputs = 6

[deleteServerObject]
SQL_1 = DELETE FROM ServerObjects
SQL_2 = 	WHERE ID = $INPUT_1;

Number of Inputs = 1


;; PLAYER INFO
;;
[existPlayerInfo]
SQL_1 = SELECT CASE
SQL_2 = 	WHEN EXISTS(SELECT * FROM PlayerInfo WHERE ID = $INPUT_1) THEN 'true' ELSE 'false'
SQL_3 = END

Number of Inputs = 1

[insertPlayerInfo]
SQL_1 = INSERT INTO PlayerInfo (UID, Name)
SQL_2 = 	VALUES ($INPUT_1, $INPUT_STRING_2);

Number of Inputs = 2

[updatePlayerInfo]
SQL_1 = UPDATE PlayerInfo 
SQL_2 = 	SET LastSide=$INPUT_STRING_3, BankMoney=$INPUT_4 
SQL_3 = WHERE UID=$INPUT_1;

;$INPUT_STRING_2
Number of Inputs = 4

[getPlayerInfoBank]
SQL_1 = SELECT BankMoney FROM PlayerInfo
SQL_2 = 	WHERE UID = $INPUT_1;

Number of Inputs = 1

;; PLAYER SAVE
;;
[getPlayerSaveData]
SQL_1 = SELECT * FROM PlayerSave WHERE PlayerSave.PlayerID in
SQL_2 = 	(SELECT id FROM PlayerInfo WHERE uid = $INPUT_1);

Number of Inputs = 1

[deletePlayerSave]
SQL_1 = DELETE FROM PlayerSave WHERE PlayerSave.PlayerID in
SQL_2 = 	(SELECT id FROM PlayerInfo WHERE uid = $INPUT_1);

Number of Inputs = 1

[updatePlayerSaveValue]
SQL_1 = UPDATE INTO PlayerSave VALUES ($INPUT_2)
SQL_2 = 		VALUES ($INPUT_3)
SQL_3 = 	WHERE PlayerSave.PlayerID in 
SQL_4 = 		(SELECT id FROM PlayerInfo WHERE uid = $INPUT_1);

Number of Inputs = 3


;; ADMIN
;;
[addAdminLog]
SQL_1 = INSERT INTO admin_log (value) VALUES ('$INPUT_1');

Number of Inputs = 1


[addHackerLog]
SQL_1 = INSERT INTO hacker_log (uid, name, hackType, hackValue)
SQL_2 = 	VALUES ($INPUT_1, $INPUT_2, $INPUT_3, $INPUT_4);

Number of Inputs = 4